// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String
  email          String          @unique
  password       String
  isAdmin        Boolean         @default(false) @map("is_admin")
  creaqtedAt     DateTime        @default(now()) @map("created_at")
  DeliveryPerson DeliveryPerson?
  Customer       Customer?
  Notification   Notification[]
}

model DeliveryPerson {
  id              String            @id @default(uuid())
  phone           String            @unique
  balance         Float
  userId          String            @unique @map("user_id")
  user            User              @relation(fields: [userId], references: [id])
  DeliveryRequest DeliveryRequest[]
  addresses       Address[]
}

model Customer {
  id     String @id @default(uuid())
  phone  String
  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  addresses       Address[]
  DeliveryRequest DeliveryRequest[]
  PaymentMethod   PaymentMethod[]
}

model Address {
  id               String            @id @default(uuid())
  street           String
  number           String
  complement       String?
  neighborhood     String
  city             String
  state            String
  zip_code         String
  customerId       String?           @map("customer_id")
  deliveryPersonId String?           @map("delivery_person_id")
  customer         Customer?         @relation(fields: [customerId], references: [id])
  deliveryPerson   DeliveryPerson?   @relation(fields: [deliveryPersonId], references: [id])
  DeliveryRequest  DeliveryRequest[]
}

model DeliveryRequest {
  id               String           @id @default(uuid())
  type             String
  quantity         Int
  delivery_time    DateTime
  status           String
  addressId        String           @map("address_id")
  address          Address          @relation(fields: [addressId], references: [id])
  customerId       String           @map("customer_id")
  customer         Customer         @relation(fields: [customerId], references: [id])
  deliveryPersonId String           @map("delivery_person_id")
  deliveryPerson   DeliveryPerson   @relation(fields: [deliveryPersonId], references: [id])
  DeliveryRating   DeliveryRating[]
}

model DeliveryRating {
  id                String          @id @default(uuid())
  rating            Int
  comment           String?
  deliveryRequestId String          @map("delivery_request_id")
  deliveryRequest   DeliveryRequest @relation(fields: [deliveryRequestId], references: [id])
}

model Notification {
  id      String @id @default(uuid())
  type    String
  message String
  userId  String @map("user_id")
  user    User   @relation(fields: [userId], references: [id])
}

model PaymentMethod {
  id          String   @id @default(uuid())
  name        String
  description String?
  customerId  String   @map("customer_id")
  customer    Customer @relation(fields: [customerId], references: [id])
}
